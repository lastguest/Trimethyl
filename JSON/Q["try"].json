{"tagname":"class","name":"Q[\"try\"]","autodetected":{},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1409}],"doc":"<p>Calls the promised function in a future turn.</p>\n","params":[{"tagname":"params","name":"object","doc":"<p>promise or immediate reference for target function</p>\n"},{"tagname":"params","doc":"<p>...args   array of application arguments</p>\n"}],"members":[{"tagname":"property","name":"allSettled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1538}],"doc":"<p>@see Promise#allSettled</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-allSettled","owner":"Q[\"try\"]","html_type":"Object"},{"tagname":"property","name":"nfbind","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1768}],"doc":"<p>Wraps a NodeJS continuation passing function and returns an equivalent\nversion that returns a promise.\n@example\nQ.nfbind(FS.readFile, __filename)(\"utf-8\")\n.then(console.log)\n.done()</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Object","default":null,"readonly":null,"id":"property-nfbind","owner":"Q[\"try\"]","short_doc":"Wraps a NodeJS continuation passing function and returns an equivalent\nversion that returns a promise. ...","html_type":"Object"},{"tagname":"method","name":"","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1464}],"doc":"<p>Turns an array of promises into a promise for an array.  If any of\nthe promises gets rejected, the whole array is rejected immediately.</p>\n","params":[{"tagname":"params","type":"Array*","name":"an","doc":"<p>array (or promise for an array) of values (or\npromises for values)</p>\n","html_type":"Array*"}],"return":{"type":"Object","name":"return","doc":"<p>a promise for an array of the corresponding values</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-","owner":"Q[\"try\"]","short_doc":"Turns an array of promises into a promise for an array. ..."},{"tagname":"method","name":"allResolved","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1513}],"doc":"<p>Waits for all promises to be settled, either fulfilled or\nrejected.  This is distinct from <code>all</code> since that would stop\nwaiting at the first rejection.  The promise returned by\n<code>allResolved</code> will never be rejected.</p>\n","params":[{"tagname":"params","name":"promises","doc":"<p>a promise for an array (or an array) of promises\n(or values)</p>\n","type":"Object","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>a promise for an array of promises</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-allResolved","owner":"Q[\"try\"]","short_doc":"Waits for all promises to be settled, either fulfilled or\nrejected. ..."},{"tagname":"method","name":"allSettled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1546}],"doc":"<p>Turns an array of promises into a promise for an array of their states (as\nreturned by <code>inspect</code>) when they have all settled.</p>\n","params":[{"tagname":"params","type":"Array[Any*]","name":"values","doc":"<p>an array (or promise for an array) of values (or\npromises for values)</p>\n","html_type":"Array[Any*]"}],"return":{"type":"Array[State]","name":"return","doc":"<p>an array of states for the respective values.</p>\n","properties":null,"html_type":"Array[State]"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["then"],"id":"method-allSettled","owner":"Q[\"try\"]","short_doc":"Turns an array of promises into a promise for an array of their states (as\nreturned by inspect) when they have all se..."},{"tagname":"method","name":"delay","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1698}],"doc":"<p>Returns a promise for the given value (or promised value), some\nmilliseconds after it resolved. Passes rejections immediately.</p>\n","params":[{"tagname":"params","type":"Any*","name":"promise","doc":"\n","html_type":"Any*"},{"tagname":"params","type":"Number","name":"milliseconds","doc":"\n","html_type":"Number"}],"return":{"type":"Object","name":"return","doc":"<p>a promise for the resolution of the given promise after milliseconds\ntime has elapsed since the resolution of the given promise.\nIf the given promise rejects, that is passed immediately.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-delay","owner":"Q[\"try\"]","short_doc":"Returns a promise for the given value (or promised value), some\nmilliseconds after it resolved. ..."},{"tagname":"method","name":"done","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1632}],"doc":"<p>Terminates a chain of promises, forcing rejections to be\nthrown as exceptions.</p>\n","params":[{"tagname":"params","type":"Any*","name":"promise","doc":"<p>at the end of a chain of promises</p>\n","html_type":"Any*"}],"return":{"type":"Object","name":"return","doc":"<p>nothing</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-done","owner":"Q[\"try\"]","short_doc":"Terminates a chain of promises, forcing rejections to be\nthrown as exceptions. ..."},{"tagname":"method","name":"fail","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1565}],"doc":"<p>Captures the failure of a promise, giving an oportunity to recover\nwith a callback.  If the given promise is fulfilled, the returned\npromise is fulfilled.</p>\n","params":[{"tagname":"params","type":"Any*","name":"promise","doc":"<p>for something</p>\n","html_type":"Any*"},{"tagname":"params","type":"Function","name":"callback","doc":"<p>to fulfill the returned promise if the\ngiven promise is rejected</p>\n","html_type":"Function"}],"return":{"type":"Object","name":"return","doc":"<p>a promise for the return value of the callback</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-fail","owner":"Q[\"try\"]","short_doc":"Captures the failure of a promise, giving an oportunity to recover\nwith a callback. ..."},{"tagname":"method","name":"fbind","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1423}],"doc":"<p>Binds the promised function, transforming return values into a fulfilled\npromise and thrown errors into a rejected one.</p>\n","params":[{"tagname":"params","name":"object","doc":"<p>promise or immediate reference for target function</p>\n","type":"Object","html_type":"Object"},{"tagname":"params","doc":"<p>...args   array of application arguments</p>\n","type":"Object","html_type":"Object"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-fbind","owner":"Q[\"try\"]","short_doc":"Binds the promised function, transforming return values into a fulfilled\npromise and thrown errors into a rejected one. ..."},{"tagname":"method","name":"fin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1601}],"doc":"<p>Provides an opportunity to observe the settling of a promise,\nregardless of whether the promise is fulfilled or rejected.  Forwards\nthe resolution to the returned promise when the callback is done.\nThe callback can return a promise to defer completion.</p>\n","params":[{"tagname":"params","type":"Any*","name":"promise","doc":"\n","html_type":"Any*"},{"tagname":"params","type":"Function","name":"callback","doc":"<p>to observe the resolution of the given\npromise, takes no arguments.</p>\n","html_type":"Function"}],"return":{"type":"Object","name":"return","doc":"<p>a promise for the resolution of the given promise when\n<code>fin</code> is done.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-fin","owner":"Q[\"try\"]","short_doc":"Provides an opportunity to observe the settling of a promise,\nregardless of whether the promise is fulfilled or rejec..."},{"tagname":"method","name":"keys","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1450}],"doc":"<p>Requests the names of the owned properties of a promised\nobject in a future turn.</p>\n","params":[{"tagname":"params","name":"object","doc":"<p>promise or immediate reference for target object</p>\n","type":"Object","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>promise for the keys of the eventually settled object</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-keys","owner":"Q[\"try\"]","short_doc":"Requests the names of the owned properties of a promised\nobject in a future turn. ..."},{"tagname":"method","name":"nfapply","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1725}],"doc":"<p>Passes a continuation to a Node function, which is called with the given\narguments provided as an array, and returns a promise.</p>\n\n<pre><code> Q.nfapply(FS.readFile, [__filename])\n .then(function (content) {\n })\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"callback","type":"Object","html_type":"Object"},{"name":"args","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-nfapply","owner":"Q[\"try\"]","short_doc":"Passes a continuation to a Node function, which is called with the given\narguments provided as an array, and returns ..."},{"tagname":"method","name":"nfcall","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1746}],"doc":"<p>Passes a continuation to a Node function, which is called with the given\narguments provided individually, and returns a promise.\n@example\nQ.nfcall(FS.readFile, __filename)\n.then(function (content) {\n})</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"callback","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-nfcall","owner":"Q[\"try\"]","short_doc":"Passes a continuation to a Node function, which is called with the given\narguments provided individually, and returns..."},{"tagname":"method","name":"nmapply","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1815}],"doc":"<p>Calls a method of a Node-style object that accepts a Node-style\ncallback with a given array of arguments, plus a provided callback.</p>\n","params":[{"tagname":"params","name":"object","doc":"<p>an object that has the named method</p>\n","type":"Object","html_type":"Object"},{"tagname":"params","type":"String","name":"name","doc":"<p>name of the method of object</p>\n","html_type":"String"},{"tagname":"params","type":"Array","name":"args","doc":"<p>arguments to pass to the method; the callback\nwill be provided by Q and appended to these arguments.</p>\n","html_type":"Array"}],"return":{"type":"Object","name":"return","doc":"<p>a promise for the value or error</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-nmapply","owner":"Q[\"try\"]","short_doc":"Calls a method of a Node-style object that accepts a Node-style\ncallback with a given array of arguments, plus a prov..."},{"tagname":"method","name":"nodeify","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1868}],"doc":"<p>If a function would like to support both Node continuation-passing-style and\npromise-returning-style, it can end its internal promise chain with\n<code>nodeify(nodeback)</code>, forwarding the optional nodeback argument.  If the user\nelects to use a nodeback, the result will be sent there.  If they do not\npass a nodeback, they will receive the result promise.</p>\n","params":[{"tagname":"params","name":"object","doc":"<p>a result (or a promise for a result)</p>\n","type":"Object","html_type":"Object"},{"tagname":"params","type":"Function","name":"nodeback","doc":"<p>a Node.js-style callback</p>\n","html_type":"Function"}],"return":{"type":"Object","name":"return","doc":"<p>either the promise or nothing</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-nodeify","owner":"Q[\"try\"]","short_doc":"If a function would like to support both Node continuation-passing-style and\npromise-returning-style, it can end its ..."},{"tagname":"method","name":"nsend","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1838}],"doc":"<p>Calls a method of a Node-style object that accepts a Node-style\ncallback, forwarding the given variadic arguments, plus a provided\ncallback argument.</p>\n","params":[{"tagname":"params","name":"object","doc":"<p>an object that has the named method</p>\n","type":"Object","html_type":"Object"},{"tagname":"params","type":"String","name":"name","doc":"<p>name of the method of object</p>\n","html_type":"String"},{"tagname":"params","doc":"<p>...args arguments to pass to the method; the callback will\nbe provided by Q and appended to these arguments.</p>\n","type":"Object","html_type":"Object"}],"return":{"type":"Object","name":"return","doc":"<p>a promise for the value or error</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-nsend","owner":"Q[\"try\"]","short_doc":"Calls a method of a Node-style object that accepts a Node-style\ncallback, forwarding the given variadic arguments, pl..."},{"tagname":"method","name":"progress","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1584}],"doc":"<p>Attaches a listener that can respond to progress notifications from a\npromise's originating deferred. This listener receives the exact arguments\npassed to <code>deferred.notify</code>.</p>\n","params":[{"tagname":"params","type":"Any*","name":"promise","doc":"<p>for something</p>\n","html_type":"Any*"},{"tagname":"params","type":"Function","name":"callback","doc":"<p>to receive any progress notifications</p>\n","html_type":"Function"}],"return":{"type":"Object","name":"return","doc":"<p>the given promise, unchanged</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-progress","owner":"Q[\"try\"]","short_doc":"Attaches a listener that can respond to progress notifications from a\npromise's originating deferred. ..."},{"tagname":"method","name":"timeout","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"/Users/flaviodestefano/Projects/Trimethyl/ext/q.js","linenr":1668}],"doc":"<p>Causes a promise to be rejected if it does not get fulfilled before\nsome milliseconds time out.</p>\n","params":[{"tagname":"params","type":"Any*","name":"promise","doc":"\n","html_type":"Any*"},{"tagname":"params","type":"Number","name":"milliseconds","doc":"<p>timeout</p>\n","html_type":"Number"},{"tagname":"params","type":"String","name":"custom","doc":"<p>error message (optional)</p>\n","html_type":"String"}],"return":{"type":"Object","name":"return","doc":"<p>a promise for the resolution of the given promise if it is\nfulfilled before the timeout, otherwise rejected.</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-timeout","owner":"Q[\"try\"]","short_doc":"Causes a promise to be rejected if it does not get fulfilled before\nsome milliseconds time out. ..."}],"alternateClassNames":[],"aliases":{},"id":"class-Q[\"try\"]","short_doc":"Calls the promised function in a future turn. ..."}