Ext.data.JsonP.Q["try"]({"tagname":"class","name":"Q[\"try\"]","autodetected":{},"files":[{"filename":"q.js","href":"q.html#Q[\"try\"]"}],"params":[{"tagname":"params","name":"object","doc":"<p>promise or immediate reference for target function</p>\n"},{"tagname":"params","doc":"<p>...args   array of application arguments</p>\n"}],"members":[{"name":"allSettled","tagname":"property","owner":"Q[\"try\"]","id":"property-allSettled","meta":{}},{"name":"nfbind","tagname":"property","owner":"Q[\"try\"]","id":"property-nfbind","meta":{}},{"name":"","tagname":"method","owner":"Q[\"try\"]","id":"method-","meta":{}},{"name":"allResolved","tagname":"method","owner":"Q[\"try\"]","id":"method-allResolved","meta":{}},{"name":"allSettled","tagname":"method","owner":"Q[\"try\"]","id":"method-allSettled","meta":{}},{"name":"delay","tagname":"method","owner":"Q[\"try\"]","id":"method-delay","meta":{}},{"name":"done","tagname":"method","owner":"Q[\"try\"]","id":"method-done","meta":{}},{"name":"fail","tagname":"method","owner":"Q[\"try\"]","id":"method-fail","meta":{}},{"name":"fbind","tagname":"method","owner":"Q[\"try\"]","id":"method-fbind","meta":{}},{"name":"fin","tagname":"method","owner":"Q[\"try\"]","id":"method-fin","meta":{}},{"name":"keys","tagname":"method","owner":"Q[\"try\"]","id":"method-keys","meta":{}},{"name":"nfapply","tagname":"method","owner":"Q[\"try\"]","id":"method-nfapply","meta":{}},{"name":"nfcall","tagname":"method","owner":"Q[\"try\"]","id":"method-nfcall","meta":{}},{"name":"nmapply","tagname":"method","owner":"Q[\"try\"]","id":"method-nmapply","meta":{}},{"name":"nodeify","tagname":"method","owner":"Q[\"try\"]","id":"method-nodeify","meta":{}},{"name":"nsend","tagname":"method","owner":"Q[\"try\"]","id":"method-nsend","meta":{}},{"name":"progress","tagname":"method","owner":"Q[\"try\"]","id":"method-progress","meta":{}},{"name":"timeout","tagname":"method","owner":"Q[\"try\"]","id":"method-timeout","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Q[\"try\"]","short_doc":"Calls the promised function in a future turn. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/q.html#Q[\"try\"]' target='_blank'>q.js</a></div></pre><div class='doc-contents'><p>Calls the promised function in a future turn.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : <div class='sub-desc'><p>promise or immediate reference for target function</p>\n</div></li><li><span class='pre'></span> : <div class='sub-desc'><p>...args   array of application arguments</p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-allSettled' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-property-allSettled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-property-allSettled' class='name expandable'>allSettled</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'><p>@see Promise#allSettled</p>\n</div><div class='long'><p>@see Promise#allSettled</p>\n</div></div></div><div id='property-nfbind' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-property-nfbind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-property-nfbind' class='name expandable'>nfbind</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Wraps a NodeJS continuation passing function and returns an equivalent\nversion that returns a promise. ...</div><div class='long'><p>Wraps a NodeJS continuation passing function and returns an equivalent\nversion that returns a promise.\n@example\nQ.nfbind(FS.readFile, __filename)(\"utf-8\")\n.then(console.log)\n.done()</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-' class='name expandable'></a>( <span class='pre'>an</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Turns an array of promises into a promise for an array. ...</div><div class='long'><p>Turns an array of promises into a promise for an array.  If any of\nthe promises gets rejected, the whole array is rejected immediately.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>an</span> : Array*<div class='sub-desc'><p>array (or promise for an array) of values (or\npromises for values)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>a promise for an array of the corresponding values</p>\n</div></li></ul></div></div></div><div id='method-allResolved' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-allResolved' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-allResolved' class='name expandable'>allResolved</a>( <span class='pre'>promises</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits for all promises to be settled, either fulfilled or\nrejected. ...</div><div class='long'><p>Waits for all promises to be settled, either fulfilled or\nrejected.  This is distinct from <code>all</code> since that would stop\nwaiting at the first rejection.  The promise returned by\n<code>allResolved</code> will never be rejected.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>promises</span> : Object<div class='sub-desc'><p>a promise for an array (or an array) of promises\n(or values)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>a promise for an array of promises</p>\n</div></li></ul></div></div></div><div id='method-allSettled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-allSettled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-allSettled' class='name expandable'>allSettled</a>( <span class='pre'>values</span> ) : Array[State]<span class=\"signature\"></span></div><div class='description'><div class='short'>Turns an array of promises into a promise for an array of their states (as\nreturned by inspect) when they have all se...</div><div class='long'><p>Turns an array of promises into a promise for an array of their states (as\nreturned by <code>inspect</code>) when they have all settled.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>values</span> : Array[Any*]<div class='sub-desc'><p>an array (or promise for an array) of values (or\npromises for values)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array[State]</span><div class='sub-desc'><p>an array of states for the respective values.</p>\n</div></li></ul></div></div></div><div id='method-delay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-delay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-delay' class='name expandable'>delay</a>( <span class='pre'>promise, milliseconds</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a promise for the given value (or promised value), some\nmilliseconds after it resolved. ...</div><div class='long'><p>Returns a promise for the given value (or promised value), some\nmilliseconds after it resolved. Passes rejections immediately.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>promise</span> : Any*<div class='sub-desc'>\n</div></li><li><span class='pre'>milliseconds</span> : Number<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>a promise for the resolution of the given promise after milliseconds\ntime has elapsed since the resolution of the given promise.\nIf the given promise rejects, that is passed immediately.</p>\n</div></li></ul></div></div></div><div id='method-done' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-done' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-done' class='name expandable'>done</a>( <span class='pre'>promise</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Terminates a chain of promises, forcing rejections to be\nthrown as exceptions. ...</div><div class='long'><p>Terminates a chain of promises, forcing rejections to be\nthrown as exceptions.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>promise</span> : Any*<div class='sub-desc'><p>at the end of a chain of promises</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>nothing</p>\n</div></li></ul></div></div></div><div id='method-fail' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-fail' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-fail' class='name expandable'>fail</a>( <span class='pre'>promise, callback</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Captures the failure of a promise, giving an oportunity to recover\nwith a callback. ...</div><div class='long'><p>Captures the failure of a promise, giving an oportunity to recover\nwith a callback.  If the given promise is fulfilled, the returned\npromise is fulfilled.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>promise</span> : Any*<div class='sub-desc'><p>for something</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>to fulfill the returned promise if the\ngiven promise is rejected</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>a promise for the return value of the callback</p>\n</div></li></ul></div></div></div><div id='method-fbind' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-fbind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-fbind' class='name expandable'>fbind</a>( <span class='pre'>object, </span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Binds the promised function, transforming return values into a fulfilled\npromise and thrown errors into a rejected one. ...</div><div class='long'><p>Binds the promised function, transforming return values into a fulfilled\npromise and thrown errors into a rejected one.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>promise or immediate reference for target function</p>\n</div></li><li><span class='pre'></span> : Object<div class='sub-desc'><p>...args   array of application arguments</p>\n</div></li></ul></div></div></div><div id='method-fin' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-fin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-fin' class='name expandable'>fin</a>( <span class='pre'>promise, callback</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Provides an opportunity to observe the settling of a promise,\nregardless of whether the promise is fulfilled or rejec...</div><div class='long'><p>Provides an opportunity to observe the settling of a promise,\nregardless of whether the promise is fulfilled or rejected.  Forwards\nthe resolution to the returned promise when the callback is done.\nThe callback can return a promise to defer completion.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>promise</span> : Any*<div class='sub-desc'>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>to observe the resolution of the given\npromise, takes no arguments.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>a promise for the resolution of the given promise when\n<code>fin</code> is done.</p>\n</div></li></ul></div></div></div><div id='method-keys' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-keys' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-keys' class='name expandable'>keys</a>( <span class='pre'>object</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Requests the names of the owned properties of a promised\nobject in a future turn. ...</div><div class='long'><p>Requests the names of the owned properties of a promised\nobject in a future turn.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>promise or immediate reference for target object</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>promise for the keys of the eventually settled object</p>\n</div></li></ul></div></div></div><div id='method-nfapply' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-nfapply' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-nfapply' class='name expandable'>nfapply</a>( <span class='pre'>callback, args</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes a continuation to a Node function, which is called with the given\narguments provided as an array, and returns ...</div><div class='long'><p>Passes a continuation to a Node function, which is called with the given\narguments provided as an array, and returns a promise.</p>\n\n<pre><code> Q.nfapply(FS.readFile, [__filename])\n .then(function (content) {\n })\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>args</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-nfcall' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-nfcall' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-nfcall' class='name expandable'>nfcall</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Passes a continuation to a Node function, which is called with the given\narguments provided individually, and returns...</div><div class='long'><p>Passes a continuation to a Node function, which is called with the given\narguments provided individually, and returns a promise.\n@example\nQ.nfcall(FS.readFile, __filename)\n.then(function (content) {\n})</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-nmapply' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-nmapply' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-nmapply' class='name expandable'>nmapply</a>( <span class='pre'>object, name, args</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Calls a method of a Node-style object that accepts a Node-style\ncallback with a given array of arguments, plus a prov...</div><div class='long'><p>Calls a method of a Node-style object that accepts a Node-style\ncallback with a given array of arguments, plus a provided callback.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>an object that has the named method</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>name of the method of object</p>\n</div></li><li><span class='pre'>args</span> : Array<div class='sub-desc'><p>arguments to pass to the method; the callback\nwill be provided by Q and appended to these arguments.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>a promise for the value or error</p>\n</div></li></ul></div></div></div><div id='method-nodeify' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-nodeify' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-nodeify' class='name expandable'>nodeify</a>( <span class='pre'>object, nodeback</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>If a function would like to support both Node continuation-passing-style and\npromise-returning-style, it can end its ...</div><div class='long'><p>If a function would like to support both Node continuation-passing-style and\npromise-returning-style, it can end its internal promise chain with\n<code>nodeify(nodeback)</code>, forwarding the optional nodeback argument.  If the user\nelects to use a nodeback, the result will be sent there.  If they do not\npass a nodeback, they will receive the result promise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>a result (or a promise for a result)</p>\n</div></li><li><span class='pre'>nodeback</span> : Function<div class='sub-desc'><p>a Node.js-style callback</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>either the promise or nothing</p>\n</div></li></ul></div></div></div><div id='method-nsend' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-nsend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-nsend' class='name expandable'>nsend</a>( <span class='pre'>object, name, </span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Calls a method of a Node-style object that accepts a Node-style\ncallback, forwarding the given variadic arguments, pl...</div><div class='long'><p>Calls a method of a Node-style object that accepts a Node-style\ncallback, forwarding the given variadic arguments, plus a provided\ncallback argument.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>an object that has the named method</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>name of the method of object</p>\n</div></li><li><span class='pre'></span> : Object<div class='sub-desc'><p>...args arguments to pass to the method; the callback will\nbe provided by Q and appended to these arguments.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>a promise for the value or error</p>\n</div></li></ul></div></div></div><div id='method-progress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-progress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-progress' class='name expandable'>progress</a>( <span class='pre'>promise, callback</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Attaches a listener that can respond to progress notifications from a\npromise's originating deferred. ...</div><div class='long'><p>Attaches a listener that can respond to progress notifications from a\npromise's originating deferred. This listener receives the exact arguments\npassed to <code>deferred.notify</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>promise</span> : Any*<div class='sub-desc'><p>for something</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>to receive any progress notifications</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>the given promise, unchanged</p>\n</div></li></ul></div></div></div><div id='method-timeout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q[\"try\"]'>Q[\"try\"]</span><br/><a href='source/q.html#Q[\"try\"]-method-timeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q[\"try\"]-method-timeout' class='name expandable'>timeout</a>( <span class='pre'>promise, milliseconds, custom</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Causes a promise to be rejected if it does not get fulfilled before\nsome milliseconds time out. ...</div><div class='long'><p>Causes a promise to be rejected if it does not get fulfilled before\nsome milliseconds time out.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>promise</span> : Any*<div class='sub-desc'>\n</div></li><li><span class='pre'>milliseconds</span> : Number<div class='sub-desc'><p>timeout</p>\n</div></li><li><span class='pre'>custom</span> : String<div class='sub-desc'><p>error message (optional)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>a promise for the resolution of the given promise if it is\nfulfilled before the timeout, otherwise rejected.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});