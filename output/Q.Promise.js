Ext.data.JsonP.Q_Promise({"tagname":"class","name":"Q.Promise","autodetected":{},"files":[{"filename":"q.js","href":"q.html#Q-Promise"}],"params":[{"tagname":"params","name":"resolver","doc":"<p>{Function} a function that returns nothing and accepts\nthe resolve, reject, and notify functions for a deferred.</p>\n"}],"return":{"type":"Object","name":"return","doc":"<p>a promise that may be resolved with the given resolve and reject\nfunctions, or rejected by a thrown exception in resolver</p>\n","properties":null,"html_type":"Object"},"members":[{"name":"async","tagname":"property","owner":"Q.Promise","id":"property-async","meta":{}},{"name":"makePromise","tagname":"property","owner":"Q.Promise","id":"property-makePromise","meta":{}},{"name":"spawn","tagname":"property","owner":"Q.Promise","id":"property-spawn","meta":{}},{"name":"","tagname":"method","owner":"Q.Promise","id":"method-","meta":{}},{"name":"coerce","tagname":"method","owner":"Q.Promise","id":"method-coerce","meta":{}},{"name":"fulfill","tagname":"method","owner":"Q.Promise","id":"method-fulfill","meta":{}},{"name":"isFulfilled","tagname":"method","owner":"Q.Promise","id":"method-isFulfilled","meta":{}},{"name":"isPending","tagname":"method","owner":"Q.Promise","id":"method-isPending","meta":{}},{"name":"isPromise","tagname":"method","owner":"Q.Promise","id":"method-isPromise","meta":{}},{"name":"isRejected","tagname":"method","owner":"Q.Promise","id":"method-isRejected","meta":{}},{"name":"join","tagname":"method","owner":"Q.Promise","id":"method-join","meta":{}},{"name":"master","tagname":"method","owner":"Q.Promise","id":"method-master","meta":{}},{"name":"race","tagname":"method","owner":"Q.Promise","id":"method-race","meta":{}},{"name":"reject","tagname":"method","owner":"Q.Promise","id":"method-reject","meta":{}},{"name":"spread","tagname":"method","owner":"Q.Promise","id":"method-spread","meta":{}},{"name":"when","tagname":"method","owner":"Q.Promise","id":"method-when","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Q.Promise","short_doc":" ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/q.html#Q-Promise' target='_blank'>q.js</a></div></pre><div class='doc-contents'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resolver</span> : <div class='sub-desc'><p>{Function} a function that returns nothing and accepts\nthe resolve, reject, and notify functions for a deferred.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>a promise that may be resolved with the given resolve and reject\nfunctions, or rejected by a thrown exception in resolver</p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-async' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-property-async' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-property-async' class='name expandable'>async</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>The async function is a decorator for generator functions, turning\nthem into asynchronous generators. ...</div><div class='long'><p>The async function is a decorator for generator functions, turning\nthem into asynchronous generators.  Although generators are only part\nof the newest ECMAScript 6 drafts, this code does not cause syntax\nerrors in older engines.  This code should continue to work and will\nin fact improve over time as the language improves.</p>\n\n<p>ES6 generators are currently part of V8 version 3.19 with the\n--harmony-generators runtime flag enabled.  SpiderMonkey has had them\nfor longer, but under an older Python-inspired form.  This function\nworks on both kinds of generators.</p>\n\n<p>Decorates a generator function such that:\n - it may yield promises\n - execution will continue when that promise is fulfilled\n - the value of the yield expression will be the fulfilled value\n - it returns a promise for the return value (when the generator\n   stops iterating)\n - the decorated function returns a promise for the return value\n   of the generator or the first rejected promise among those\n   yielded.\n - if an error is thrown in the generator, it propagates through\n   every following yield until it is caught, or until it escapes\n   the generator function altogether, and is translated into a\n   rejection for the promise returned by the decorated generator.</p>\n</div></div></div><div id='property-makePromise' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-property-makePromise' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-property-makePromise' class='name expandable'>makePromise</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Constructs a Promise with a promise descriptor object and optional fallback\nfunction. ...</div><div class='long'><p>Constructs a Promise with a promise descriptor object and optional fallback\nfunction.  The descriptor contains methods like when(rejected), get(name),\nset(name, value), post(name, args), and delete(name), which all\nreturn either a value, a promise for a value, or a rejection.  The fallback\naccepts the operation name, a resolver, and any further arguments that would\nhave been forwarded to the appropriate method above had a method been\nprovided with the proper name.  The API makes no guarantees about the nature\nof the returned object, apart from that it is usable whereever promises are\nbought and sold.</p>\n</div></div></div><div id='property-spawn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-property-spawn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-property-spawn' class='name expandable'>spawn</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>The spawn function is a small wrapper around async that immediately\ncalls the generator and also ends the promise cha...</div><div class='long'><p>The spawn function is a small wrapper around async that immediately\ncalls the generator and also ends the promise chain, so that any\nunhandled errors are thrown instead of forwarded to the error\nhandler. This is useful because it's extremely common to run\ngenerators at the top-level to work with libraries.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-method-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-method-' class='name expandable'></a>( <span class='pre'>object</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>If an object is not a promise, it is as \"near\" as possible. ...</div><div class='long'><p>If an object is not a promise, it is as \"near\" as possible.\nIf a promise is rejected, it is as \"near\" as possible too.\nIf it’s a fulfilled promise, the fulfillment value is nearer.\nIf it’s a deferred promise and the deferred has been resolved, the\nresolution is \"nearer\".</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>most resolved (nearest) form of the object</p>\n</div></li></ul></div></div></div><div id='method-coerce' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-method-coerce' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-method-coerce' class='name expandable'>coerce</a>( <span class='pre'>promise</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts thenables to Q promises. ...</div><div class='long'><p>Converts thenables to Q promises.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>promise</span> : Object<div class='sub-desc'><p>thenable promise</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>a Q promise</p>\n</div></li></ul></div></div></div><div id='method-fulfill' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-method-fulfill' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-method-fulfill' class='name expandable'>fulfill</a>( <span class='pre'>value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Constructs a fulfilled promise for an immediate reference. ...</div><div class='long'><p>Constructs a fulfilled promise for an immediate reference.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p>immediate reference</p>\n</div></li></ul></div></div></div><div id='method-isFulfilled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-method-isFulfilled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-method-isFulfilled' class='name expandable'>isFulfilled</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>whether the given object is a value or fulfilled\npromise.</p>\n</div></li></ul></div></div></div><div id='method-isPending' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-method-isPending' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-method-isPending' class='name expandable'>isPending</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>whether the given object is a pending promise, meaning not\nfulfilled or rejected.</p>\n</div></li></ul></div></div></div><div id='method-isPromise' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-method-isPromise' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-method-isPromise' class='name expandable'>isPromise</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>whether the given object is a promise.\nOtherwise it is a fulfilled value.</p>\n</div></li></ul></div></div></div><div id='method-isRejected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-method-isRejected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-method-isRejected' class='name expandable'>isRejected</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>whether the given object is a rejected promise.</p>\n</div></li></ul></div></div></div><div id='method-join' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-method-join' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-method-join' class='name expandable'>join</a>( <span class='pre'>x, y</span> ) : Any*<span class=\"signature\"></span></div><div class='description'><div class='short'>If two promises eventually fulfill to the same value, promises that value,\nbut otherwise rejects. ...</div><div class='long'><p>If two promises eventually fulfill to the same value, promises that value,\nbut otherwise rejects.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : Object<div class='sub-desc'><p>{Any*}</p>\n</div></li><li><span class='pre'>y</span> : Object<div class='sub-desc'><p>{Any*}</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Any*</span><div class='sub-desc'><p>a promise for x and y if they are the same, but a rejection\notherwise.</p>\n</div></li></ul></div></div></div><div id='method-master' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-method-master' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-method-master' class='name expandable'>master</a>( <span class='pre'>object</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Annotates an object such that it will never be\ntransferred away from this process over any promise\ncommunication chan...</div><div class='long'><p>Annotates an object such that it will never be\ntransferred away from this process over any promise\ncommunication channel.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>promise a wrapping of that object that\nadditionally responds to the \"isDef\" message\nwithout a rejection.</p>\n</div></li></ul></div></div></div><div id='method-race' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-method-race' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-method-race' class='name expandable'>race</a>( <span class='pre'>answers</span> ) : Any*<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a promise for the first of an array of promises to become fulfilled. ...</div><div class='long'><p>Returns a promise for the first of an array of promises to become fulfilled.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>answers</span> : Object<div class='sub-desc'><p>{Array[Any*]} promises to race</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Any*</span><div class='sub-desc'><p>the first promise to be fulfilled</p>\n</div></li></ul></div></div></div><div id='method-reject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-method-reject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-method-reject' class='name expandable'>reject</a>( <span class='pre'>reason</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Constructs a rejected promise. ...</div><div class='long'><p>Constructs a rejected promise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>reason</span> : Object<div class='sub-desc'><p>value describing the failure</p>\n</div></li></ul></div></div></div><div id='method-spread' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-method-spread' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-method-spread' class='name expandable'>spread</a>( <span class='pre'>fulfilled, rejected</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Spreads the values of a promised array of arguments into the\nfulfillment callback. ...</div><div class='long'><p>Spreads the values of a promised array of arguments into the\nfulfillment callback.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fulfilled</span> : Object<div class='sub-desc'><p>callback that receives variadic arguments from the\npromised array</p>\n</div></li><li><span class='pre'>rejected</span> : Object<div class='sub-desc'><p>callback that receives the exception if the promise\nis rejected.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>a promise for the return value or thrown exception of\neither callback.</p>\n</div></li></ul></div></div></div><div id='method-when' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Q.Promise'>Q.Promise</span><br/><a href='source/q.html#Q-Promise-method-when' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Q.Promise-method-when' class='name expandable'>when</a>( <span class='pre'>value, fulfilled, rejected, progressed</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers an observer on a promise. ...</div><div class='long'><p>Registers an observer on a promise.</p>\n\n<p>Guarantees:</p>\n\n<ol>\n<li>that fulfilled and rejected will be called only once.</li>\n<li>that either the fulfilled callback or the rejected callback will be\ncalled, but not both.</li>\n<li>that fulfilled and rejected will not be called in this turn.</li>\n</ol>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p>promise or immediate reference to observe</p>\n</div></li><li><span class='pre'>fulfilled</span> : Object<div class='sub-desc'><p>function to be called with the fulfilled value</p>\n</div></li><li><span class='pre'>rejected</span> : Object<div class='sub-desc'><p>function to be called with the rejection exception</p>\n</div></li><li><span class='pre'>progressed</span> : Object<div class='sub-desc'><p>function to be called on any progress notifications</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>promise for the return value from the invoked callback</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});